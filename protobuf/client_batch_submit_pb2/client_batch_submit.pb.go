// Copyright 2017 Intel Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// -----------------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: protobuf/client_batch_submit_pb2/client_batch_submit.proto

package client_batch_submit_pb2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	batch_pb2 "github.com/hyperledger/sawtooth-sdk-go/protobuf/batch_pb2"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClientBatchStatus_Status int32

const (
	ClientBatchStatus_STATUS_UNSET ClientBatchStatus_Status = 0
	ClientBatchStatus_COMMITTED    ClientBatchStatus_Status = 1
	ClientBatchStatus_INVALID      ClientBatchStatus_Status = 2
	ClientBatchStatus_PENDING      ClientBatchStatus_Status = 3
	ClientBatchStatus_UNKNOWN      ClientBatchStatus_Status = 4
)

// Enum value maps for ClientBatchStatus_Status.
var (
	ClientBatchStatus_Status_name = map[int32]string{
		0: "STATUS_UNSET",
		1: "COMMITTED",
		2: "INVALID",
		3: "PENDING",
		4: "UNKNOWN",
	}
	ClientBatchStatus_Status_value = map[string]int32{
		"STATUS_UNSET": 0,
		"COMMITTED":    1,
		"INVALID":      2,
		"PENDING":      3,
		"UNKNOWN":      4,
	}
)

func (x ClientBatchStatus_Status) Enum() *ClientBatchStatus_Status {
	p := new(ClientBatchStatus_Status)
	*p = x
	return p
}

func (x ClientBatchStatus_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientBatchStatus_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_enumTypes[0].Descriptor()
}

func (ClientBatchStatus_Status) Type() protoreflect.EnumType {
	return &file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_enumTypes[0]
}

func (x ClientBatchStatus_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientBatchStatus_Status.Descriptor instead.
func (ClientBatchStatus_Status) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDescGZIP(), []int{0, 0}
}

type ClientBatchSubmitResponse_Status int32

const (
	ClientBatchSubmitResponse_STATUS_UNSET   ClientBatchSubmitResponse_Status = 0
	ClientBatchSubmitResponse_OK             ClientBatchSubmitResponse_Status = 1
	ClientBatchSubmitResponse_INTERNAL_ERROR ClientBatchSubmitResponse_Status = 2
	ClientBatchSubmitResponse_INVALID_BATCH  ClientBatchSubmitResponse_Status = 3
	ClientBatchSubmitResponse_QUEUE_FULL     ClientBatchSubmitResponse_Status = 4
)

// Enum value maps for ClientBatchSubmitResponse_Status.
var (
	ClientBatchSubmitResponse_Status_name = map[int32]string{
		0: "STATUS_UNSET",
		1: "OK",
		2: "INTERNAL_ERROR",
		3: "INVALID_BATCH",
		4: "QUEUE_FULL",
	}
	ClientBatchSubmitResponse_Status_value = map[string]int32{
		"STATUS_UNSET":   0,
		"OK":             1,
		"INTERNAL_ERROR": 2,
		"INVALID_BATCH":  3,
		"QUEUE_FULL":     4,
	}
)

func (x ClientBatchSubmitResponse_Status) Enum() *ClientBatchSubmitResponse_Status {
	p := new(ClientBatchSubmitResponse_Status)
	*p = x
	return p
}

func (x ClientBatchSubmitResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientBatchSubmitResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_enumTypes[1].Descriptor()
}

func (ClientBatchSubmitResponse_Status) Type() protoreflect.EnumType {
	return &file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_enumTypes[1]
}

func (x ClientBatchSubmitResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientBatchSubmitResponse_Status.Descriptor instead.
func (ClientBatchSubmitResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDescGZIP(), []int{2, 0}
}

type ClientBatchStatusResponse_Status int32

const (
	ClientBatchStatusResponse_STATUS_UNSET   ClientBatchStatusResponse_Status = 0
	ClientBatchStatusResponse_OK             ClientBatchStatusResponse_Status = 1
	ClientBatchStatusResponse_INTERNAL_ERROR ClientBatchStatusResponse_Status = 2
	ClientBatchStatusResponse_NO_RESOURCE    ClientBatchStatusResponse_Status = 5
	ClientBatchStatusResponse_INVALID_ID     ClientBatchStatusResponse_Status = 8
)

// Enum value maps for ClientBatchStatusResponse_Status.
var (
	ClientBatchStatusResponse_Status_name = map[int32]string{
		0: "STATUS_UNSET",
		1: "OK",
		2: "INTERNAL_ERROR",
		5: "NO_RESOURCE",
		8: "INVALID_ID",
	}
	ClientBatchStatusResponse_Status_value = map[string]int32{
		"STATUS_UNSET":   0,
		"OK":             1,
		"INTERNAL_ERROR": 2,
		"NO_RESOURCE":    5,
		"INVALID_ID":     8,
	}
)

func (x ClientBatchStatusResponse_Status) Enum() *ClientBatchStatusResponse_Status {
	p := new(ClientBatchStatusResponse_Status)
	*p = x
	return p
}

func (x ClientBatchStatusResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientBatchStatusResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_enumTypes[2].Descriptor()
}

func (ClientBatchStatusResponse_Status) Type() protoreflect.EnumType {
	return &file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_enumTypes[2]
}

func (x ClientBatchStatusResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientBatchStatusResponse_Status.Descriptor instead.
func (ClientBatchStatusResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDescGZIP(), []int{4, 0}
}

// Information about the status of a batch submitted to the validator.
//
// Attributes:
//     batch_id: The id (header_signature) of the batch
//     status: The committed status of the batch
//     invalid_transactions: Info for transactions that failed, if any
//
// Statuses:
//     COMMITTED - the batch was accepted and has been committed to the chain
//     INVALID - the batch failed validation, it should be resubmitted
//     PENDING - the batch is still being processed
//     UNKNOWN - no status for the batch could be found (possibly invalid)
type ClientBatchStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchId             string                                  `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Status              ClientBatchStatus_Status                `protobuf:"varint,2,opt,name=status,proto3,enum=ClientBatchStatus_Status" json:"status,omitempty"`
	InvalidTransactions []*ClientBatchStatus_InvalidTransaction `protobuf:"bytes,3,rep,name=invalid_transactions,json=invalidTransactions,proto3" json:"invalid_transactions,omitempty"`
}

func (x *ClientBatchStatus) Reset() {
	*x = ClientBatchStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientBatchStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientBatchStatus) ProtoMessage() {}

func (x *ClientBatchStatus) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientBatchStatus.ProtoReflect.Descriptor instead.
func (*ClientBatchStatus) Descriptor() ([]byte, []int) {
	return file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDescGZIP(), []int{0}
}

func (x *ClientBatchStatus) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *ClientBatchStatus) GetStatus() ClientBatchStatus_Status {
	if x != nil {
		return x.Status
	}
	return ClientBatchStatus_STATUS_UNSET
}

func (x *ClientBatchStatus) GetInvalidTransactions() []*ClientBatchStatus_InvalidTransaction {
	if x != nil {
		return x.InvalidTransactions
	}
	return nil
}

// Submits a list of Batches to be added to the blockchain.
type ClientBatchSubmitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Batches []*batch_pb2.Batch `protobuf:"bytes,1,rep,name=batches,proto3" json:"batches,omitempty"`
}

func (x *ClientBatchSubmitRequest) Reset() {
	*x = ClientBatchSubmitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientBatchSubmitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientBatchSubmitRequest) ProtoMessage() {}

func (x *ClientBatchSubmitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientBatchSubmitRequest.ProtoReflect.Descriptor instead.
func (*ClientBatchSubmitRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDescGZIP(), []int{1}
}

func (x *ClientBatchSubmitRequest) GetBatches() []*batch_pb2.Batch {
	if x != nil {
		return x.Batches
	}
	return nil
}

// This is a response to a submission of one or more Batches.
// Statuses:
//   * OK - everything with the request worked as expected
//   * INTERNAL_ERROR - general error, such as protobuf failing to deserialize
//   * INVALID_BATCH - the batch failed validation, likely due to a bad signature
//   * QUEUE_FULL - the batch is unable to be queued for processing, due to
//        a full processing queue.  The batch may be submitted again.
type ClientBatchSubmitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ClientBatchSubmitResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ClientBatchSubmitResponse_Status" json:"status,omitempty"`
}

func (x *ClientBatchSubmitResponse) Reset() {
	*x = ClientBatchSubmitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientBatchSubmitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientBatchSubmitResponse) ProtoMessage() {}

func (x *ClientBatchSubmitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientBatchSubmitResponse.ProtoReflect.Descriptor instead.
func (*ClientBatchSubmitResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDescGZIP(), []int{2}
}

func (x *ClientBatchSubmitResponse) GetStatus() ClientBatchSubmitResponse_Status {
	if x != nil {
		return x.Status
	}
	return ClientBatchSubmitResponse_STATUS_UNSET
}

// A request for the status of one or more batches, specified by id.
// If `wait` is set to true, the validator will wait to respond until all
// batches are committed, or until the specified `timeout` in seconds has
// elapsed. Defaults to 300.
type ClientBatchStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchIds []string `protobuf:"bytes,1,rep,name=batch_ids,json=batchIds,proto3" json:"batch_ids,omitempty"`
	Wait     bool     `protobuf:"varint,2,opt,name=wait,proto3" json:"wait,omitempty"`
	Timeout  uint32   `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *ClientBatchStatusRequest) Reset() {
	*x = ClientBatchStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientBatchStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientBatchStatusRequest) ProtoMessage() {}

func (x *ClientBatchStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientBatchStatusRequest.ProtoReflect.Descriptor instead.
func (*ClientBatchStatusRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDescGZIP(), []int{3}
}

func (x *ClientBatchStatusRequest) GetBatchIds() []string {
	if x != nil {
		return x.BatchIds
	}
	return nil
}

func (x *ClientBatchStatusRequest) GetWait() bool {
	if x != nil {
		return x.Wait
	}
	return false
}

func (x *ClientBatchStatusRequest) GetTimeout() uint32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

// This is a response to a request for the status of specific batches.
// Statuses:
//   * OK - everything with the request worked as expected
//   * INTERNAL_ERROR - general error, such as protobuf failing to deserialize
//   * NO_RESOURCE - the response contains no data, likely because
//     no ids were specified in the request
type ClientBatchStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        ClientBatchStatusResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ClientBatchStatusResponse_Status" json:"status,omitempty"`
	BatchStatuses []*ClientBatchStatus             `protobuf:"bytes,2,rep,name=batch_statuses,json=batchStatuses,proto3" json:"batch_statuses,omitempty"`
}

func (x *ClientBatchStatusResponse) Reset() {
	*x = ClientBatchStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientBatchStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientBatchStatusResponse) ProtoMessage() {}

func (x *ClientBatchStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientBatchStatusResponse.ProtoReflect.Descriptor instead.
func (*ClientBatchStatusResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDescGZIP(), []int{4}
}

func (x *ClientBatchStatusResponse) GetStatus() ClientBatchStatusResponse_Status {
	if x != nil {
		return x.Status
	}
	return ClientBatchStatusResponse_STATUS_UNSET
}

func (x *ClientBatchStatusResponse) GetBatchStatuses() []*ClientBatchStatus {
	if x != nil {
		return x.BatchStatuses
	}
	return nil
}

type ClientBatchStatus_InvalidTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ExtendedData  []byte `protobuf:"bytes,3,opt,name=extended_data,json=extendedData,proto3" json:"extended_data,omitempty"`
}

func (x *ClientBatchStatus_InvalidTransaction) Reset() {
	*x = ClientBatchStatus_InvalidTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientBatchStatus_InvalidTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientBatchStatus_InvalidTransaction) ProtoMessage() {}

func (x *ClientBatchStatus_InvalidTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientBatchStatus_InvalidTransaction.ProtoReflect.Descriptor instead.
func (*ClientBatchStatus_InvalidTransaction) Descriptor() ([]byte, []int) {
	return file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ClientBatchStatus_InvalidTransaction) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ClientBatchStatus_InvalidTransaction) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ClientBatchStatus_InvalidTransaction) GetExtendedData() []byte {
	if x != nil {
		return x.ExtendedData
	}
	return nil
}

var File_protobuf_client_batch_submit_pb2_client_batch_submit_proto protoreflect.FileDescriptor

var file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDesc = []byte{
	0x0a, 0x3a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x70,
	0x62, 0x32, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x62, 0x32,
	0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x89, 0x03, 0x0a,
	0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x31, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x58, 0x0a, 0x14, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x7a, 0x0a, 0x12, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0x50, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x04, 0x22, 0x3c, 0x0a, 0x18, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x07, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x19, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x59, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f,
	0x4b, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x5f, 0x42, 0x41, 0x54, 0x43, 0x48, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x51, 0x55,
	0x45, 0x55, 0x45, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x04, 0x22, 0x65, 0x0a, 0x18, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x77, 0x61, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x22, 0xea, 0x01, 0x0a, 0x19, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0e, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10,
	0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x0f, 0x0a,
	0x0b, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x05, 0x12, 0x0e,
	0x0a, 0x0a, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x08, 0x42, 0x32,
	0x0a, 0x15, 0x73, 0x61, 0x77, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x50, 0x01, 0x5a, 0x17, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x70,
	0x62, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDescOnce sync.Once
	file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDescData = file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDesc
)

func file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDescGZIP() []byte {
	file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDescOnce.Do(func() {
		file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDescData)
	})
	return file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDescData
}

var file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_goTypes = []interface{}{
	(ClientBatchStatus_Status)(0),                // 0: ClientBatchStatus.Status
	(ClientBatchSubmitResponse_Status)(0),        // 1: ClientBatchSubmitResponse.Status
	(ClientBatchStatusResponse_Status)(0),        // 2: ClientBatchStatusResponse.Status
	(*ClientBatchStatus)(nil),                    // 3: ClientBatchStatus
	(*ClientBatchSubmitRequest)(nil),             // 4: ClientBatchSubmitRequest
	(*ClientBatchSubmitResponse)(nil),            // 5: ClientBatchSubmitResponse
	(*ClientBatchStatusRequest)(nil),             // 6: ClientBatchStatusRequest
	(*ClientBatchStatusResponse)(nil),            // 7: ClientBatchStatusResponse
	(*ClientBatchStatus_InvalidTransaction)(nil), // 8: ClientBatchStatus.InvalidTransaction
	(*batch_pb2.Batch)(nil),                      // 9: Batch
}
var file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_depIdxs = []int32{
	0, // 0: ClientBatchStatus.status:type_name -> ClientBatchStatus.Status
	8, // 1: ClientBatchStatus.invalid_transactions:type_name -> ClientBatchStatus.InvalidTransaction
	9, // 2: ClientBatchSubmitRequest.batches:type_name -> Batch
	1, // 3: ClientBatchSubmitResponse.status:type_name -> ClientBatchSubmitResponse.Status
	2, // 4: ClientBatchStatusResponse.status:type_name -> ClientBatchStatusResponse.Status
	3, // 5: ClientBatchStatusResponse.batch_statuses:type_name -> ClientBatchStatus
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_init() }
func file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_init() {
	if File_protobuf_client_batch_submit_pb2_client_batch_submit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientBatchStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientBatchSubmitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientBatchSubmitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientBatchStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientBatchStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientBatchStatus_InvalidTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_goTypes,
		DependencyIndexes: file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_depIdxs,
		EnumInfos:         file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_enumTypes,
		MessageInfos:      file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_msgTypes,
	}.Build()
	File_protobuf_client_batch_submit_pb2_client_batch_submit_proto = out.File
	file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_rawDesc = nil
	file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_goTypes = nil
	file_protobuf_client_batch_submit_pb2_client_batch_submit_proto_depIdxs = nil
}
