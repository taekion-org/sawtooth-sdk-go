// Copyright 2017 Intel Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// -----------------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: protobuf/client_batch_pb2/client_batch.proto

package client_batch_pb2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	batch_pb2 "github.com/hyperledger/sawtooth-sdk-go/protobuf/batch_pb2"
	client_list_control_pb2 "github.com/hyperledger/sawtooth-sdk-go/protobuf/client_list_control_pb2"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClientBatchListResponse_Status int32

const (
	ClientBatchListResponse_STATUS_UNSET   ClientBatchListResponse_Status = 0
	ClientBatchListResponse_OK             ClientBatchListResponse_Status = 1
	ClientBatchListResponse_INTERNAL_ERROR ClientBatchListResponse_Status = 2
	ClientBatchListResponse_NOT_READY      ClientBatchListResponse_Status = 3
	ClientBatchListResponse_NO_ROOT        ClientBatchListResponse_Status = 4
	ClientBatchListResponse_NO_RESOURCE    ClientBatchListResponse_Status = 5
	ClientBatchListResponse_INVALID_PAGING ClientBatchListResponse_Status = 6
	ClientBatchListResponse_INVALID_SORT   ClientBatchListResponse_Status = 7
	ClientBatchListResponse_INVALID_ID     ClientBatchListResponse_Status = 8
)

// Enum value maps for ClientBatchListResponse_Status.
var (
	ClientBatchListResponse_Status_name = map[int32]string{
		0: "STATUS_UNSET",
		1: "OK",
		2: "INTERNAL_ERROR",
		3: "NOT_READY",
		4: "NO_ROOT",
		5: "NO_RESOURCE",
		6: "INVALID_PAGING",
		7: "INVALID_SORT",
		8: "INVALID_ID",
	}
	ClientBatchListResponse_Status_value = map[string]int32{
		"STATUS_UNSET":   0,
		"OK":             1,
		"INTERNAL_ERROR": 2,
		"NOT_READY":      3,
		"NO_ROOT":        4,
		"NO_RESOURCE":    5,
		"INVALID_PAGING": 6,
		"INVALID_SORT":   7,
		"INVALID_ID":     8,
	}
)

func (x ClientBatchListResponse_Status) Enum() *ClientBatchListResponse_Status {
	p := new(ClientBatchListResponse_Status)
	*p = x
	return p
}

func (x ClientBatchListResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientBatchListResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_client_batch_pb2_client_batch_proto_enumTypes[0].Descriptor()
}

func (ClientBatchListResponse_Status) Type() protoreflect.EnumType {
	return &file_protobuf_client_batch_pb2_client_batch_proto_enumTypes[0]
}

func (x ClientBatchListResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientBatchListResponse_Status.Descriptor instead.
func (ClientBatchListResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_client_batch_pb2_client_batch_proto_rawDescGZIP(), []int{1, 0}
}

type ClientBatchGetResponse_Status int32

const (
	ClientBatchGetResponse_STATUS_UNSET   ClientBatchGetResponse_Status = 0
	ClientBatchGetResponse_OK             ClientBatchGetResponse_Status = 1
	ClientBatchGetResponse_INTERNAL_ERROR ClientBatchGetResponse_Status = 2
	ClientBatchGetResponse_NO_RESOURCE    ClientBatchGetResponse_Status = 5
	ClientBatchGetResponse_INVALID_ID     ClientBatchGetResponse_Status = 8
)

// Enum value maps for ClientBatchGetResponse_Status.
var (
	ClientBatchGetResponse_Status_name = map[int32]string{
		0: "STATUS_UNSET",
		1: "OK",
		2: "INTERNAL_ERROR",
		5: "NO_RESOURCE",
		8: "INVALID_ID",
	}
	ClientBatchGetResponse_Status_value = map[string]int32{
		"STATUS_UNSET":   0,
		"OK":             1,
		"INTERNAL_ERROR": 2,
		"NO_RESOURCE":    5,
		"INVALID_ID":     8,
	}
)

func (x ClientBatchGetResponse_Status) Enum() *ClientBatchGetResponse_Status {
	p := new(ClientBatchGetResponse_Status)
	*p = x
	return p
}

func (x ClientBatchGetResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientBatchGetResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_client_batch_pb2_client_batch_proto_enumTypes[1].Descriptor()
}

func (ClientBatchGetResponse_Status) Type() protoreflect.EnumType {
	return &file_protobuf_client_batch_pb2_client_batch_proto_enumTypes[1]
}

func (x ClientBatchGetResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientBatchGetResponse_Status.Descriptor instead.
func (ClientBatchGetResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_client_batch_pb2_client_batch_proto_rawDescGZIP(), []int{3, 0}
}

// A request to return a list of batches from the validator. May include the id
// of a particular block to be the `head` of the chain being requested. In that
// case the list will include the batches from that block, and all batches
// previous to that block on the chain. Filter with specific `batch_ids`.
type ClientBatchListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeadId   string                                        `protobuf:"bytes,1,opt,name=head_id,json=headId,proto3" json:"head_id,omitempty"`
	BatchIds []string                                      `protobuf:"bytes,2,rep,name=batch_ids,json=batchIds,proto3" json:"batch_ids,omitempty"`
	Paging   *client_list_control_pb2.ClientPagingControls `protobuf:"bytes,3,opt,name=paging,proto3" json:"paging,omitempty"`
	Sorting  []*client_list_control_pb2.ClientSortControls `protobuf:"bytes,4,rep,name=sorting,proto3" json:"sorting,omitempty"`
}

func (x *ClientBatchListRequest) Reset() {
	*x = ClientBatchListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_client_batch_pb2_client_batch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientBatchListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientBatchListRequest) ProtoMessage() {}

func (x *ClientBatchListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_client_batch_pb2_client_batch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientBatchListRequest.ProtoReflect.Descriptor instead.
func (*ClientBatchListRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_client_batch_pb2_client_batch_proto_rawDescGZIP(), []int{0}
}

func (x *ClientBatchListRequest) GetHeadId() string {
	if x != nil {
		return x.HeadId
	}
	return ""
}

func (x *ClientBatchListRequest) GetBatchIds() []string {
	if x != nil {
		return x.BatchIds
	}
	return nil
}

func (x *ClientBatchListRequest) GetPaging() *client_list_control_pb2.ClientPagingControls {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ClientBatchListRequest) GetSorting() []*client_list_control_pb2.ClientSortControls {
	if x != nil {
		return x.Sorting
	}
	return nil
}

// A response that lists batches from newest to oldest.
//
// Statuses:
//   * OK - everything worked as expected
//   * INTERNAL_ERROR - general error, such as protobuf failing to deserialize
//   * NOT_READY - the validator does not yet have a genesis block
//   * NO_ROOT - the head block specified was not found
//   * NO_RESOURCE - no batches were found with the parameters specified
//   * INVALID_PAGING - the paging controls were malformed or out of range
//   * INVALID_SORT - the sorting controls were malformed or invalid
type ClientBatchListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  ClientBatchListResponse_Status                `protobuf:"varint,1,opt,name=status,proto3,enum=ClientBatchListResponse_Status" json:"status,omitempty"`
	Batches []*batch_pb2.Batch                            `protobuf:"bytes,2,rep,name=batches,proto3" json:"batches,omitempty"`
	HeadId  string                                        `protobuf:"bytes,3,opt,name=head_id,json=headId,proto3" json:"head_id,omitempty"`
	Paging  *client_list_control_pb2.ClientPagingResponse `protobuf:"bytes,4,opt,name=paging,proto3" json:"paging,omitempty"`
}

func (x *ClientBatchListResponse) Reset() {
	*x = ClientBatchListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_client_batch_pb2_client_batch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientBatchListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientBatchListResponse) ProtoMessage() {}

func (x *ClientBatchListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_client_batch_pb2_client_batch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientBatchListResponse.ProtoReflect.Descriptor instead.
func (*ClientBatchListResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_client_batch_pb2_client_batch_proto_rawDescGZIP(), []int{1}
}

func (x *ClientBatchListResponse) GetStatus() ClientBatchListResponse_Status {
	if x != nil {
		return x.Status
	}
	return ClientBatchListResponse_STATUS_UNSET
}

func (x *ClientBatchListResponse) GetBatches() []*batch_pb2.Batch {
	if x != nil {
		return x.Batches
	}
	return nil
}

func (x *ClientBatchListResponse) GetHeadId() string {
	if x != nil {
		return x.HeadId
	}
	return ""
}

func (x *ClientBatchListResponse) GetPaging() *client_list_control_pb2.ClientPagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

// Fetches a specific batch by its id (header_signature) from the blockchain.
type ClientBatchGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchId string `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
}

func (x *ClientBatchGetRequest) Reset() {
	*x = ClientBatchGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_client_batch_pb2_client_batch_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientBatchGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientBatchGetRequest) ProtoMessage() {}

func (x *ClientBatchGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_client_batch_pb2_client_batch_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientBatchGetRequest.ProtoReflect.Descriptor instead.
func (*ClientBatchGetRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_client_batch_pb2_client_batch_proto_rawDescGZIP(), []int{2}
}

func (x *ClientBatchGetRequest) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

// A response that returns the batch specified by a ClientBatchGetRequest.
//
// Statuses:
//   * OK - everything worked as expected, batch has been fetched
//   * INTERNAL_ERROR - general error, such as protobuf failing to deserialize
//   * NO_RESOURCE - no batch with the specified id exists
type ClientBatchGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ClientBatchGetResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ClientBatchGetResponse_Status" json:"status,omitempty"`
	Batch  *batch_pb2.Batch              `protobuf:"bytes,2,opt,name=batch,proto3" json:"batch,omitempty"`
}

func (x *ClientBatchGetResponse) Reset() {
	*x = ClientBatchGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_client_batch_pb2_client_batch_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientBatchGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientBatchGetResponse) ProtoMessage() {}

func (x *ClientBatchGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_client_batch_pb2_client_batch_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientBatchGetResponse.ProtoReflect.Descriptor instead.
func (*ClientBatchGetResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_client_batch_pb2_client_batch_proto_rawDescGZIP(), []int{3}
}

func (x *ClientBatchGetResponse) GetStatus() ClientBatchGetResponse_Status {
	if x != nil {
		return x.Status
	}
	return ClientBatchGetResponse_STATUS_UNSET
}

func (x *ClientBatchGetResponse) GetBatch() *batch_pb2.Batch {
	if x != nil {
		return x.Batch
	}
	return nil
}

var File_protobuf_client_batch_pb2_client_batch_proto protoreflect.FileDescriptor

var file_protobuf_client_batch_pb2_client_batch_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x62, 0x32, 0x2f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70,
	0x62, 0x32, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3a,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x62, 0x32,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac, 0x01, 0x0a, 0x16, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x73, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x6f,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73,
	0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x22, 0xd8, 0x02, 0x0a, 0x17, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x0a, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x22, 0x99, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x03,
	0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x5f, 0x52, 0x4f, 0x4f, 0x54, 0x10, 0x04, 0x12, 0x0f, 0x0a,
	0x0b, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x05, 0x12, 0x12,
	0x0a, 0x0e, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x41, 0x47, 0x49, 0x4e, 0x47,
	0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53, 0x4f,
	0x52, 0x54, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f,
	0x49, 0x44, 0x10, 0x08, 0x22, 0x32, 0x0a, 0x15, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x16, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x05, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x22, 0x57, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x49, 0x44,
	0x10, 0x08, 0x42, 0x2b, 0x0a, 0x15, 0x73, 0x61, 0x77, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x50, 0x01, 0x5a, 0x10, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x62, 0x32, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_client_batch_pb2_client_batch_proto_rawDescOnce sync.Once
	file_protobuf_client_batch_pb2_client_batch_proto_rawDescData = file_protobuf_client_batch_pb2_client_batch_proto_rawDesc
)

func file_protobuf_client_batch_pb2_client_batch_proto_rawDescGZIP() []byte {
	file_protobuf_client_batch_pb2_client_batch_proto_rawDescOnce.Do(func() {
		file_protobuf_client_batch_pb2_client_batch_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_client_batch_pb2_client_batch_proto_rawDescData)
	})
	return file_protobuf_client_batch_pb2_client_batch_proto_rawDescData
}

var file_protobuf_client_batch_pb2_client_batch_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_protobuf_client_batch_pb2_client_batch_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_protobuf_client_batch_pb2_client_batch_proto_goTypes = []interface{}{
	(ClientBatchListResponse_Status)(0),                  // 0: ClientBatchListResponse.Status
	(ClientBatchGetResponse_Status)(0),                   // 1: ClientBatchGetResponse.Status
	(*ClientBatchListRequest)(nil),                       // 2: ClientBatchListRequest
	(*ClientBatchListResponse)(nil),                      // 3: ClientBatchListResponse
	(*ClientBatchGetRequest)(nil),                        // 4: ClientBatchGetRequest
	(*ClientBatchGetResponse)(nil),                       // 5: ClientBatchGetResponse
	(*client_list_control_pb2.ClientPagingControls)(nil), // 6: ClientPagingControls
	(*client_list_control_pb2.ClientSortControls)(nil),   // 7: ClientSortControls
	(*batch_pb2.Batch)(nil),                              // 8: Batch
	(*client_list_control_pb2.ClientPagingResponse)(nil), // 9: ClientPagingResponse
}
var file_protobuf_client_batch_pb2_client_batch_proto_depIdxs = []int32{
	6, // 0: ClientBatchListRequest.paging:type_name -> ClientPagingControls
	7, // 1: ClientBatchListRequest.sorting:type_name -> ClientSortControls
	0, // 2: ClientBatchListResponse.status:type_name -> ClientBatchListResponse.Status
	8, // 3: ClientBatchListResponse.batches:type_name -> Batch
	9, // 4: ClientBatchListResponse.paging:type_name -> ClientPagingResponse
	1, // 5: ClientBatchGetResponse.status:type_name -> ClientBatchGetResponse.Status
	8, // 6: ClientBatchGetResponse.batch:type_name -> Batch
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_protobuf_client_batch_pb2_client_batch_proto_init() }
func file_protobuf_client_batch_pb2_client_batch_proto_init() {
	if File_protobuf_client_batch_pb2_client_batch_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobuf_client_batch_pb2_client_batch_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientBatchListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_client_batch_pb2_client_batch_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientBatchListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_client_batch_pb2_client_batch_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientBatchGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_client_batch_pb2_client_batch_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientBatchGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_client_batch_pb2_client_batch_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protobuf_client_batch_pb2_client_batch_proto_goTypes,
		DependencyIndexes: file_protobuf_client_batch_pb2_client_batch_proto_depIdxs,
		EnumInfos:         file_protobuf_client_batch_pb2_client_batch_proto_enumTypes,
		MessageInfos:      file_protobuf_client_batch_pb2_client_batch_proto_msgTypes,
	}.Build()
	File_protobuf_client_batch_pb2_client_batch_proto = out.File
	file_protobuf_client_batch_pb2_client_batch_proto_rawDesc = nil
	file_protobuf_client_batch_pb2_client_batch_proto_goTypes = nil
	file_protobuf_client_batch_pb2_client_batch_proto_depIdxs = nil
}
